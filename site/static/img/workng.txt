--HTML
<link href='//fonts.googleapis.com/css?family=Geostar' rel='stylesheet'>

<div id="canvas-wrap">  
<canvas id="canvas01" width="1000" height="1320"></canvas>
  <div id="overlay1" style="width: 75px; font-family: Geostar; font-size: 18px; color: red">   
  </div>
</div>	

--CSS
#canvas-wrap { position:relative;width:1000px; height:1320px } /* Make this a positioned parent */
#overlay1     { position:absolute; top:280px; left:480px; }

body{
  background-color: #111;
  margin: 0;
}
/* There is some css hacking needed to display the right size, notice
for instance that height and width are half of the HTML definition 
for retina screens */

#canvas01 {
  background-color: #111;
  position: absolute;
  top: 46%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 500px;  
  height: 600px;  
}

--JS
var iso = new Isomer(document.getElementById("canvas01"));
//var canvas = new Isomer(iso);
var Shape = Isomer.Shape;
var Point = Isomer.Point;
var Path = Isomer.Path;
var Color = Isomer.Color;
var boxColor = new Color(204,209,217,0.5);
var blue = new Color(0, 119, 190, 0.5);
var white1 = new Color(230, 230, 230, 0.9);
var white2 = new Color(220, 220, 220, 0.9);
var sunflower = new Color(255,206,84,0.5);
var bittersweet = new Color(252,110,81,0.5);
var grass = new Color(140,193,82,1);
  //var crimson = new Color(218,0,0,1);
var pinkrose = new Color(236,135,192,0.8);
var lavender = new Color(150,122,220,0.7);
//makeGrid(14, 14, 0, new Color(111, 111, 111, 1));

// Hit Detection variables //Easel.JS
var stage = new createjs.Stage("canvas01");
createjs.Touch.enable(stage);

//
// Bottom Iceberg is best iceberg
/*iso.add(Shape.Pyramid(Point(3, 3, 6), 2, 2, 6).rotateX(Point(3, 4, 6), Math.PI), white1);
iso.add(Shape.Pyramid(Point(3, 3, 6), 2, 2, 4).rotateX(Point(2, 3, 6), Math.PI), white1);
iso.add(Shape.Pyramid(Point(2, 3, 6), 1, 2, 3).rotateX(Point(0, 4, 6), Math.PI), white2);
*/

// Add some water, notice it is slighlty rotated to avoid it being aligned with the iceberg  
var water = Shape.Prism(Point.ORIGIN, 7, 7, 6);
iso.add(water.rotateZ(Point(3, 3, 6), Math.PI/-90), boxColor);

// Add another box 4
var box4 = Shape.Prism(Point(3, 3, -2.01), 6, 6, 6);
iso.add(box4.rotateZ(Point(3, 3, 6), Math.PI/-90), grass);

// Add another box
var box1 = Shape.Prism(Point(3, 2.15, -2), 6, 1, 2);
iso.add(box1.rotateZ(Point(3, 3, 6), Math.PI/-90), sunflower);

// Add another box 2
var box2 = Shape.Prism(Point.ORIGIN, 1, 7, 4);
iso.add(box2.rotateZ(Point(3, 3, 6), Math.PI/-90), blue);

// Add another box 3
var box3 = Shape.Prism(Point(3, 2.15, 0), 6, 1, 3);
iso.add(box3.rotateZ(Point(3, 3, 6), Math.PI/-90), bittersweet);

// Add another box 6
var box6 = Shape.Prism(Point(3.78, 3, 2.15), 6, 1, 1);
iso.add(box6.rotateZ(Point(3, 3, 6), Math.PI/-90), lavender);

// Add another box 5
var box5 = Shape.Prism(Point(2.99, 3.17, 0.91), 1, 7, 2);
iso.add(box5.rotateZ(Point(3, 3, 6), Math.PI/-90), pinkrose);

//draw attached number  
/*iso.add(new Path([
    Point(1, 1, 1),
    Point(2, 1, 1),
    Point(2, 2, 1),
    Point(1, 2, 1)    
]), new Color(50, 160, 60));
*/

var div = document.getElementById('overlay1')
div.innerHTML = div.innerHTML + 'Packed order:';
$("#overlay1").sevenSeg({ value: 6 });

// Top of the iceberg to you !
/*iso.add(Shape.Pyramid(Point(3, 3, 6), 2, 2, 2), white1);
iso.add(Shape.Pyramid(Point(3, 1, 6), 2, 2, 1.4), white2);
iso.add(Shape.Pyramid(Point(2, 3, 6), 1, 2, 1), white1);
*/
  
 // }
// add mouse events for each bitmap mask
  // you can also use foreach, but jslint complains :( 
  //for (var i = 0; i < bitmaps.length; i++) {
    stage.enableMouseOver(10);
    stage.addChild(bitmap2);
    bitmap2.on("mouseover", handleInteraction);
    bitmap2.on("mouseout", handleInteraction);
    //box5.on("click", handleClick);
  //}

//  Mouse event handlers
function handleInteraction(event) {
  if (event.type === "mouseover") {
    document.body.style.cursor = "pointer";
    var div = document.getElementById('overlay1')
    div.innerHTML = div.innerHTML + 'Packed order:';
    $("#overlay1").sevenSeg({ value: 8 });
    //    console.log('Mouse Over:' + event.target.name);
  } else {
    //    console.log('Mouse Out');
    document.body.style.cursor = "default";
    //cubes[event.target.name].color = gray;
    ovelay1.innerHTML = '&nbsp;';
  }
  //render();
}

// GridMaker
function makeGrid(xSize, ySize, zHeight, gridColor) {
  for (x = 0; x < xSize + 1; x++) {
    iso.add(new Path([
      new Point(x, 0, zHeight),
      new Point(x, xSize, zHeight),
      new Point(x, 0, zHeight)
    ]), gridColor);
  }
  for (y = 0; y < ySize + 1; y++) {
    iso.add(new Path([
      new Point(0, y, zHeight),
      new Point(ySize, y, zHeight),
      new Point(0, y, zHeight)
    ]), gridColor);
  }
}